eco.kafkamanager.core.bootstrapServers=${KAFKA_SERVERS_URL:localhost:9092}
eco.kafkamanager.core.zkConnect=${ZK_CONNECT:}
eco.kafkamanager.core.schemaRegistryUrl=${SCHEMA_REGISTRY_URL:}
#eco.kafkamanager.core.clientConfig[xxx]=
eco.kafkamanager.core.metadataStoreBootstrapTimeoutInMs=${METADATA_BOOTSTRAP_TIMEOUT_MS:180000}
eco.kafkamanager.core.transactionStoreBootstrapTimeoutInMs=${TX_BOOTSTRAP_TIMEOUT_MS:180000}
eco.kafkamanager.core.transactionStoreBootstrapDataFreshness=${TX_BOOTSTRAP_DATA_FRESHNESS:ONE_HOUR}

#eco.kafkamanager.core.authz.kafka.enabled=true
#eco.kafkamanager.core.authz.kafka.authorizerClass=
#eco.kafkamanager.core.authz.kafka.authorizerConfig[xxx]=
#eco.kafkamanager.core.authz.kafka.authorizerConfig[yyy]=
#eco.kafkamanager.core.authz.kafka.adminRoles=ROLE_ECO-KM-ADMIN

eco.kafkamanager.udmetrics.enabled=${UDM_ENABLED:false}
eco.kafkamanager.udmetrics.calculationIntervalInMs=${UDM_CALCULATION_INTERVAL:60000}
eco.kafkamanager.udmetrics.config.repo.kafka.bootstrapTimeoutInMs=${UDM_BOOTSTRAP_TIMEOUT_MS:60000}

management.metrics.export.prometheus=true

#eco.kafkamanager.ui.gaTrackingId=XXX

management.endpoints.web.exposure.include=info,health,metrics,prometheus

server.port=${SERVER_PORT:8082}
server.context-path=/
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto

# auth profiles: auth-disabled
spring.profiles.active=auth-disabled
